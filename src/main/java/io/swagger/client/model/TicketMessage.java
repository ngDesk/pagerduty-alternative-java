/*
 * ngDesk_Operations
 * ngDesk_Operations
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Attachment;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * TicketMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-23T21:25:05.928Z")
public class TicketMessage {
  @SerializedName("TICKET_MESSAGE_ID")
  private Integer TICKET_MESSAGE_ID = null;

  @SerializedName("TICKET_ID")
  private Integer TICKET_ID = null;

  @SerializedName("BODY")
  private String BODY = null;

  @SerializedName("USER_ID")
  private Integer USER_ID = null;

  @SerializedName("DATE_CREATED")
  private DateTime DATE_CREATED = null;

  @SerializedName("COMPANY_ID")
  private Integer COMPANY_ID = null;

  @SerializedName("TICKET_ATTACHMENTS")
  private List<Attachment> TICKET_ATTACHMENTS = null;

  @SerializedName("element1")
  private String element1 = null;

  public TicketMessage TICKET_MESSAGE_ID(Integer TICKET_MESSAGE_ID) {
    this.TICKET_MESSAGE_ID = TICKET_MESSAGE_ID;
    return this;
  }

   /**
   * Get TICKET_MESSAGE_ID
   * @return TICKET_MESSAGE_ID
  **/
  @ApiModelProperty(value = "")
  public Integer getTICKETMESSAGEID() {
    return TICKET_MESSAGE_ID;
  }

  public void setTICKETMESSAGEID(Integer TICKET_MESSAGE_ID) {
    this.TICKET_MESSAGE_ID = TICKET_MESSAGE_ID;
  }

  public TicketMessage TICKET_ID(Integer TICKET_ID) {
    this.TICKET_ID = TICKET_ID;
    return this;
  }

   /**
   * Get TICKET_ID
   * @return TICKET_ID
  **/
  @ApiModelProperty(value = "")
  public Integer getTICKETID() {
    return TICKET_ID;
  }

  public void setTICKETID(Integer TICKET_ID) {
    this.TICKET_ID = TICKET_ID;
  }

  public TicketMessage BODY(String BODY) {
    this.BODY = BODY;
    return this;
  }

   /**
   * Get BODY
   * @return BODY
  **/
  @ApiModelProperty(value = "")
  public String getBODY() {
    return BODY;
  }

  public void setBODY(String BODY) {
    this.BODY = BODY;
  }

  public TicketMessage USER_ID(Integer USER_ID) {
    this.USER_ID = USER_ID;
    return this;
  }

   /**
   * Get USER_ID
   * @return USER_ID
  **/
  @ApiModelProperty(value = "")
  public Integer getUSERID() {
    return USER_ID;
  }

  public void setUSERID(Integer USER_ID) {
    this.USER_ID = USER_ID;
  }

  public TicketMessage DATE_CREATED(DateTime DATE_CREATED) {
    this.DATE_CREATED = DATE_CREATED;
    return this;
  }

   /**
   * Get DATE_CREATED
   * @return DATE_CREATED
  **/
  @ApiModelProperty(value = "")
  public DateTime getDATECREATED() {
    return DATE_CREATED;
  }

  public void setDATECREATED(DateTime DATE_CREATED) {
    this.DATE_CREATED = DATE_CREATED;
  }

  public TicketMessage COMPANY_ID(Integer COMPANY_ID) {
    this.COMPANY_ID = COMPANY_ID;
    return this;
  }

   /**
   * Get COMPANY_ID
   * @return COMPANY_ID
  **/
  @ApiModelProperty(value = "")
  public Integer getCOMPANYID() {
    return COMPANY_ID;
  }

  public void setCOMPANYID(Integer COMPANY_ID) {
    this.COMPANY_ID = COMPANY_ID;
  }

  public TicketMessage TICKET_ATTACHMENTS(List<Attachment> TICKET_ATTACHMENTS) {
    this.TICKET_ATTACHMENTS = TICKET_ATTACHMENTS;
    return this;
  }

  public TicketMessage addTICKETATTACHMENTSItem(Attachment TICKET_ATTACHMENTSItem) {
    if (this.TICKET_ATTACHMENTS == null) {
      this.TICKET_ATTACHMENTS = new ArrayList<Attachment>();
    }
    this.TICKET_ATTACHMENTS.add(TICKET_ATTACHMENTSItem);
    return this;
  }

   /**
   * Get TICKET_ATTACHMENTS
   * @return TICKET_ATTACHMENTS
  **/
  @ApiModelProperty(value = "")
  public List<Attachment> getTICKETATTACHMENTS() {
    return TICKET_ATTACHMENTS;
  }

  public void setTICKETATTACHMENTS(List<Attachment> TICKET_ATTACHMENTS) {
    this.TICKET_ATTACHMENTS = TICKET_ATTACHMENTS;
  }

  public TicketMessage element1(String element1) {
    this.element1 = element1;
    return this;
  }

   /**
   * Get element1
   * @return element1
  **/
  @ApiModelProperty(value = "")
  public String getElement1() {
    return element1;
  }

  public void setElement1(String element1) {
    this.element1 = element1;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TicketMessage ticketMessage = (TicketMessage) o;
    return Objects.equals(this.TICKET_MESSAGE_ID, ticketMessage.TICKET_MESSAGE_ID) &&
        Objects.equals(this.TICKET_ID, ticketMessage.TICKET_ID) &&
        Objects.equals(this.BODY, ticketMessage.BODY) &&
        Objects.equals(this.USER_ID, ticketMessage.USER_ID) &&
        Objects.equals(this.DATE_CREATED, ticketMessage.DATE_CREATED) &&
        Objects.equals(this.COMPANY_ID, ticketMessage.COMPANY_ID) &&
        Objects.equals(this.TICKET_ATTACHMENTS, ticketMessage.TICKET_ATTACHMENTS) &&
        Objects.equals(this.element1, ticketMessage.element1);
  }

  @Override
  public int hashCode() {
    return Objects.hash(TICKET_MESSAGE_ID, TICKET_ID, BODY, USER_ID, DATE_CREATED, COMPANY_ID, TICKET_ATTACHMENTS, element1);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TicketMessage {\n");
    
    sb.append("    TICKET_MESSAGE_ID: ").append(toIndentedString(TICKET_MESSAGE_ID)).append("\n");
    sb.append("    TICKET_ID: ").append(toIndentedString(TICKET_ID)).append("\n");
    sb.append("    BODY: ").append(toIndentedString(BODY)).append("\n");
    sb.append("    USER_ID: ").append(toIndentedString(USER_ID)).append("\n");
    sb.append("    DATE_CREATED: ").append(toIndentedString(DATE_CREATED)).append("\n");
    sb.append("    COMPANY_ID: ").append(toIndentedString(COMPANY_ID)).append("\n");
    sb.append("    TICKET_ATTACHMENTS: ").append(toIndentedString(TICKET_ATTACHMENTS)).append("\n");
    sb.append("    element1: ").append(toIndentedString(element1)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

